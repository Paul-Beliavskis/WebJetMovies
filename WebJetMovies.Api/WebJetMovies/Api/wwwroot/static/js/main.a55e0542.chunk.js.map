{"version":3,"sources":["components/movieList/MovieListItem.js","components/movieList/MovieList.js","services/MovieApi.js","components/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","inline","display","rightAlign","fontSize","marginLeft","MovieListItem","props","classes","ListItem","alignItems","ListItemAvatar","Avatar","variant","src","movie","poster","className","large","icon","faFilm","ListItemText","primary","title","secondary","Fragment","Typography","component","color","description","price","root","width","backgroundColor","palette","background","paper","MovieList","isFetching","size","List","movies","map","Divider","MovieApi","getMovieListAsync","a","axios","get","itemList","console","log","config","autoA11y","App","useState","setMovies","setIsFetching","useEffect","movieApi","then","response","status","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAkDMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACNC,QAAS,UAEXC,WAAY,CACVC,SAAU,OACVF,QAAS,SACTG,WAAY,aAKHC,EAnDO,SAACC,GAEvB,IAAMC,EAAUV,IAEhB,OACI,eAACW,EAAA,EAAD,CAAUC,WAAW,aAArB,UACA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,IAAKP,EAAMQ,MAAMC,OAAQC,UAAWT,EAAQU,MAAtE,SACE,cAAC,IAAD,CAAiBC,KAAMC,UAG3B,cAACC,EAAA,EAAD,CACEC,QAASf,EAAMQ,MAAMQ,MACrBC,UACE,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,CACEC,UAAU,OACVd,QAAQ,QACRI,UAAWT,EAAQP,OACnB2B,MAAM,cAJR,SAMErB,EAAMQ,MAAMc,cAEd,cAACH,EAAA,EAAD,CACEC,UAAU,OACVd,QAAQ,QACRI,UAAWT,EAAQL,WACnByB,MAAM,cAJR,SAMErB,EAAMQ,MAAMe,iB,QCjClBhC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJC,MAAO,QACPC,gBAAiBjC,EAAMkC,QAAQC,WAAWC,WAI/B,SAASC,EAAU9B,GAChC,IAAMC,EAAUV,IAEhB,OACES,EAAM+B,WAAa,cAAC,SAAD,CAAQC,KAAM,MAAS,cAACC,EAAA,EAAD,CAAMvB,UAAWT,EAAQuB,KAAzB,SACzCxB,EAAMkC,OAAOC,KAAI,SAAC3B,GAAD,OAClB,qCACE,cAAC,EAAD,CAAeA,MAAOA,IACtB,cAAC4B,EAAA,EAAD,CAAS9B,QAAQ,QAAQc,UAAU,e,8CCH1BiB,EAJE,CACbC,kBAdmB,uCAAG,4BAAAC,EAAA,+EAEDC,IAAMC,IAAI,sBAFT,cAElBC,EAFkB,yBAIfA,GAJe,gCAQlBC,QAAQC,IAAI,yBARM,iCAUnB,CAAC,KAVkB,yDAAH,sD,MCIvBC,EAAOC,UAAW,EAuBHC,MArBf,WAAgB,IAAD,EACeC,mBAAS,CAAC,KADzB,mBACNd,EADM,KACEe,EADF,OAEuBD,oBAAS,GAFhC,mBAENjB,EAFM,KAEMmB,EAFN,KAcb,OAVAC,qBAAU,WACRC,EAASd,oBAAoBe,MAAK,SAACC,GACV,MAApBA,EAASC,SAEVN,EAAUK,EAASE,KAAKtB,QACxBgB,GAAc,SAGjB,IAGD,qBAAKxC,UAAU,MAAf,SACI,cAACoB,EAAD,CAAWI,OAAQA,EAAQH,WAAYA,OCZhC0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a55e0542.chunk.js","sourcesContent":["import ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { faFilm } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nconst MovieListItem = (props) => {\r\n\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n    <ListItem alignItems=\"flex-start\">\r\n    <ListItemAvatar>\r\n      <Avatar variant=\"rounded\" src={props.movie.poster} className={classes.large}>\r\n        <FontAwesomeIcon icon={faFilm}></FontAwesomeIcon>\r\n      </Avatar>\r\n    </ListItemAvatar>\r\n    <ListItemText\r\n      primary={props.movie.title}\r\n      secondary={\r\n        <React.Fragment>\r\n          <Typography\r\n            component=\"span\"\r\n            variant=\"body2\"\r\n            className={classes.inline}\r\n            color=\"textPrimary\"\r\n          >\r\n           {props.movie.description}\r\n          </Typography>\r\n          <Typography\r\n            component=\"span\"\r\n            variant=\"body2\"\r\n            className={classes.rightAlign}\r\n            color=\"textPrimary\"\r\n          >\r\n           {props.movie.price}\r\n          </Typography>\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  </ListItem> \r\n);\r\n\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inline: {\r\n      display: 'inline'\r\n    },\r\n    rightAlign: {\r\n      fontSize: '24px',\r\n      display: 'inline',\r\n      marginLeft: '400px'\r\n    }\r\n  }));\r\n\r\n\r\nexport default MovieListItem;","import { List } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MovieListItem from './MovieListItem';\r\nimport { Circle } from 'react-spinners-css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '700px',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function MovieList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    props.isFetching ? <Circle size={200}/> : <List className={classes.root}>\r\n    {props.movies.map((movie) => \r\n    <>\r\n      <MovieListItem movie={movie} />\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      </>\r\n    )}\r\n    </List>\r\n  );\r\n}","import axios from 'axios';\r\n\r\nconst getMovieListAsync = async () => {\r\ntry{\r\n    var itemList = await axios.get('/api/v1/movie/list');\r\n\r\n    return itemList;\r\n}catch(e)\r\n    {\r\n        //TODO: send back and error code so calling code can display the appropriate error toast to the user\r\n        console.log(\"Failed to fetch items\");\r\n    }\r\nreturn [{}];\r\n}\r\n\r\nconst MovieApi = {\r\n    getMovieListAsync: getMovieListAsync\r\n}\r\n\r\nexport default MovieApi;\r\n","import '../styles/App.css';\nimport MovieList from './movieList/MovieList';\nimport movieApi from '../services/MovieApi';\nimport {useState, useEffect} from 'react';\nimport { config } from '@fortawesome/fontawesome-svg-core'\n\nconfig.autoA11y = true\n\nfunction App() {\n  const [movies, setMovies] = useState([{}]);\n  const [isFetching, setIsFetching] = useState(true);\n\n  useEffect(() => {\n    movieApi.getMovieListAsync().then((response) => {\n      if(response.status === 200)\n      {\n        setMovies(response.data.movies);\n        setIsFetching(false);\n      }\n    });\n  }, [])\n\n  return (\n    <div className=\"App\">\n        <MovieList movies={movies} isFetching={isFetching}></MovieList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}